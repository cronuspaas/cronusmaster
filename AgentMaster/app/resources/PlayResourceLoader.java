package resources;

import org.springframework.beans.factory.BeanDefinitionStoreException;
import org.springframework.core.io.AbstractResource;
import org.springframework.core.io.ByteArrayResource;
import org.springframework.core.io.DefaultResourceLoader;
import org.springframework.core.io.InputStreamResource;
import org.springframework.core.io.Resource;
import org.springframework.core.io.ResourceLoader;

import play.Logger;

import play.Play;
import play.classloading.ApplicationClasses.ApplicationClass;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

/**
 * TODO: Insert description here. (generated by binyu)
 */
public class PlayResourceLoader extends DefaultResourceLoader implements ResourceLoader {
  
  @Override
  public Resource getResource(String location) {
    AbstractResource res = null;
    try {
      for (ApplicationClass appClass : Play.classes.all()) {
        if (location.equalsIgnoreCase(appClass.name)) {
          if (Play.usePrecompiled) {
            File f =
                Play.getFile("precompiled/java/" + (appClass.name.replace(".", "/")) + ".class");
            res = new InputStreamResource(new FileInputStream(f));
          } else {
            res = new ByteArrayResource(appClass.enhance());
          }
        }
        if (res != null) {
          return res;
        }
      }
    } catch (IOException ex) {
      Logger.error(ex, "Fail loading resource %s", location);
    }
    return super.getResource(location);
  }

}
